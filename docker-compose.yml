version: '3'
services:
  nodejs_app:
    container_name: node_app
    image: node:latest
    volumes:
      - ./node_app:/app
    working_dir: /app
    ports:
      - "333:3000" 
    command: npm run start

    networks:
      - server-network

  python_app:
    container_name: python_app
    build: ./
    image: python:latest 
    volumes:
      - ./python_app:/app
    working_dir: /app
    depends_on:
      - postgres
    command: >
      bash -c "pip install -r requirements.txt
      && python main.py"
    networks:
      - server-network

  postgres:
    container_name: postgres
    build: ./database/
    image: postgres:latest
    volumes:
      - ./backups:/backups
      - ./init_db/init.sql:/docker-entrypoint-initdb.d/db.sql
    working_dir: /backups
    ports:
      - "777:5432"
    environment:
      POSTGRES_USER: rfid_user
      POSTGRES_PASSWORD: rfid_user_password
      POSTGRES_DB: rfid
    networks:
      - server-network  

  pgbackups:
    container_name: Backup
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - ./backup:/backups
    links:
      - postgres:postgres
    depends_on:
      - postgres
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=rfid
      - POSTGRES_USER=rfid_user
      - POSTGRES_PASSWORD=rfid_user_password
      - POSTGRES_EXTRA_OPTS=-Z9 --schema=public --blobs
      - SCHEDULE=@every 0h30m00s
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=5555  
    networks:
      - server-network
networks:
  server-network:
    driver: bridge
